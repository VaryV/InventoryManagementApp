@page "/inventory"
@rendermode InteractiveServer
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@attribute [StreamRendering]

<style>
    h6 {
        background-color: #D6EEEE;
        margin: 0 auto; /* Adjust as needed */
    }
    table {
        margin: 0 auto;
        border: 1px solid black;
    }
    td {
        padding: 10px;
        text-align: center;
        border: 1px solid black;
    }
    th{
        padding: 10px;
        text-align: center;
        border: 1px solid black;
    }
    tr:nth-child(even) {
        background-color: #D6EEEE;
    }
    .button-container {
        display: flex;
        justify-content: center;
    }
    .generate-invoice-button {
        background-color: #D6EEEE; /* Green */
        border: none;
        color: rgb(0, 0, 0);
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        transition-duration: 0.4s;
        cursor: pointer;
        border-radius: 8px;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    }

    .generate-invoice-button:hover {
        background-color: #45a049; /* Darker Green */
    }
</style>


<PageTitle>Inventory</PageTitle>
<div class="button-container">
    <h1>Product List</h1>
</div>
<p></p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table width="80%">
        <thead>
            <tr>
                <th><input type="text" placeholder="ID" @bind-value="searchID" @bind-value:event="oninput" @bind-value:after="ListProd"></th>
                <th><input type="text" placeholder="Name" @bind-value="searchName" @bind-value:event="oninput" @bind-value:after="ListProd"></th>
                <th>DESC </th>
                <th>UNIT PRICE </th>
                <th>STOCK QUANTITY </th>
                <th>DISCOUNT </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.name</td>
                    <td>@product.desc</td>
                    <td>@product.uprice</td>
                    <td>@product.qty</td>
                    <td>@product.discount</td>
                    <td><button class="generate-invoice-button" @onclick="() => DeleteProduct(product.Id)">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
    <div class="button-container">
        <pre>
        <h6></h6>
        <button class="generate-invoice-button" @onclick="NavigateToRoute">Add a new Inventory Item</button>
        </pre>
    </div>
}

@code {
    private ulong searchID = 0;
    private string? searchName;
    private Product[]? products;
    private void NavigateToRoute()
    {
        NavigationManager.NavigateTo("/add-new-inventory-item");
    }
    protected override async Task OnInitializedAsync()
    {
        await ListProd();
    }

    private async Task ListProd()
    {
        string name;
        if (string.IsNullOrEmpty(searchName))
            name = "all";
        else
            name = searchName;
        products = await httpClient.GetFromJsonAsync<Product[]>($"http://localhost:5038/list_prods/{searchID}/{name}");
    }

    private async Task DeleteProduct(ulong id)
    {
        Console.WriteLine($"http://localhost:5038/del_prod/{id}");
        HttpResponseMessage response = await httpClient.DeleteAsync($"http://localhost:5038/del_prod/{id}");
        await ListProd();
    }

    public class Product
    {
        public ulong Id { get; set; }
        public string? name { get; set; }
        public string? desc { get; set; }
        public Decimal uprice { get; set; }
        public int qty { get; set; }
        public Decimal discount { get; set; }
    }
}
